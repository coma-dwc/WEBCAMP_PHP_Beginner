<?php
//浮動小数点の誤差
//（特に金融など）厳格な処理が必要な所では「非常に重要」
echo "普通に比較\n";
$f = 0.3;
var_dump($f === 0.3); //true

//
echo "\n";
echo "0.1+0.2 と 0.3 を比較\n";
$f = 0.1 + 0.2;
var_dump($f === 0.3); //false これを「誤差」という

//
echo "\n";
echo "0.1+0.2 と 0.3 をprintfで表示\n"; //printfで%fを渡すと「小数を表示」できる
printf("0.1+0.2: %f \n", $f);
printf("    0.3: %f \n", 0.3);

//%fには「小数点以下第何位までを表示する」という制度の比較が出来る
echo "\n";
echo "0.1+0.2 と 0.3 を高精度のprintfで表示\n";
printf("0.1+0.2: %.32f \n", $f);
printf("    0.3: %.32f \n", 0.3);
//「どちらも0.3ではない数字」が出てきた
//これが「近似値」であり、つまりは「誤差」


//小数には「誤差」があるので、2つの小数を===で比較するのは「やってはいけない」とされている
//実際に比較しなければならないときは、以下のような処理が必要になる
//「2つの小数を減算した結果の絶対値」が、許容範囲の誤差以内ならば、等しいとする

//精度6行での正しい比較
echo "\n";
echo "0.1+0.2 と 0.3 の現実的な比較\n";
define('FLOAT_PRECISION', 0.000001); //精度はあちこちで使うことが予想されるので定数にする
var_dump( abs($f - 0.3) < FLOAT_PRECISION );