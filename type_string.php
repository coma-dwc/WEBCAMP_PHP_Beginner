<?php
#stringは「文字列」と呼ばれることが多い

//文字列型の確認
$s = "Hello";
var_dump($s);

//1文字目にアクセス
echo $s[1] , "\n";

//マルチバイトで0文字目にアクセス
$multi_string = "あいうえお";
var_dump($multi_string);
echo $multi_string[0] , "\n";

#マルチバイトは「string(15) "あいうえお"」の出力から分かるように、「1文字あたり3バイトの長さ」を持っているため、
#5文字なのに、var_dump()では15バイトと書かれている
#そのため、$multi_string[0]は「"あ"を構成する3バイトのうち、1バイト目の表示」になり、文字として不完全な状態なので
#正しく出力されない


//「数字」と「数値」
$num_i = 123; //数値(int)
$num_s = "123"; //数字(string)
var_dump($num_i);
var_dump($num_s);

//シングルクォートとダブルクォートの違い => PHPは「だいたい同じだが、ちょっとだけ違うもの」に属する
$double_s = "num is {$num_i} \n";
$single_s = 'num is {$num_i} \n';
var_dump($double_s);
var_dump($single_s);

#ダブルクォートは、中の 「\n を改行にしてくれる」などの解釈をしてくれる（これを「エスケープシーケンス」と呼称します）
#ダブルクォートは、{}「波括弧」で囲まれた変数などを解釈して「中身の展開」をしてくれる
#シングルクォートは、上記のようなことをいっさい行なわない